version: '3.8'

networks:
  # All container connect in a network
  sentinel-network:
    driver: bridge

services:
  sentinel:
    build: .
    image: sentinel
    container_name: sentinel
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - 'postgres'
      - 'redis'
    restart: always
    command: python -u launcher.py
    volumes:
     - sentinel_data:/data
    networks:
      - sentinel-network
    env_file:
      - .env

  redis:
    image: redis:6.2.7-alpine
    container_name: redis
    depends_on:
      - 'postgres'
    restart: always
    volumes:
      - redis_data:/data
    ports:
    - '127.0.0.1:6379:6379'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - sentinel-network
    env_file:
      - .env

  postgres:
    image: postgres:14.5-alpine
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - TZ=UTC
      - PGTZ=UTC
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - '127.0.0.1:5432:5432'
    networks:
      - sentinel-network
    env_file:
      - .env

volumes:
    postgres_data:
    redis_data:
    sentinel_data:
